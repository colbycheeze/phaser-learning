{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"Phaser\"","webpack:///./src/common/constants.js","webpack:///./src/entities/Player.js","webpack:///./src/scenes/LoadScene.js","webpack:///./src/entities/TileMarker.js","webpack:///./src/scenes/PlayScene.js","webpack:///./src/scenes/ScoreScene.js","webpack:///./src/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Phaser","PATH","SCENE","LOAD","PLAY","SCORE","IMAGE","SPIKE","SPRITE","PLAYER","ATLAS","TILESET","INDUSTRIAL","TILEMAP","PLATFORMER","PLATFORMER_SIMPLE","Player","scene","x","y","_classCallCheck","this","_defineProperty","sprite","physics","add","setDrag","setMaxVelocity","setSize","setOffset","_Phaser$Input$Keyboar","Input","Keyboard","KeyCodes","LEFT","RIGHT","UP","W","A","D","keys","input","keyboard","addKeys","left","right","up","w","a","anims","frames","generateFrameNumbers","start","end","frameRate","repeat","body","moves","destroy","JustDown","onGround","blocked","down","acceleration","isDown","setAccelerationX","setFlipX","setVelocityY","velocity","play","stop","setTexture","LoadScene","LoadScene_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","Scene","_this","load","setPath","values","forEach","image","_this2","tile","_this3","map","tilemapTiledJSON","frameConfig","_this4","spritesheet","_this5","_ref","_ref2","_slicedToArray","path","config","atlas","loadingBar","graphics","fillStyle","color","halfScreenWidth","game","renderer","width","halfScreenHeight","height","maxBarLength","on","percent","barWidth","fillRect","loadImages","loadTilesets","loadTilemaps","loadSpritesheet","frameWidth","frameHeight","margin","spacing","showLoadingBar","CreateAnimations","MouseTileMarker","TileMarker_classCallCheck","TileMarker_defineProperty","lineStyle","strokeRect","tileWidth","tileHeight","_this$scene","cameras","groundLayer","pointer","activePointer","worldPoint","positionToCamera","main","putTileAtWorldXY","setCollision","pointerTileXY","worldToTileXY","snappedWorldPoint","tileToWorldXY","setPosition","handleInput","PlayScene","PlayScene_classCallCheck","PlayScene_getPrototypeOf","PlayScene_defineProperty","PlayScene_assertThisInitialized","make","tilemap","tileset","addTilesetImage","createDynamicLayer","setCollisionByProperty","collides","spikeGroup","staticGroup","forEachTile","index","spike","getCenterX","getCenterY","rotation","angle","removeTileAt","text","font","fill","padding","backgroundColor","setScrollFactor","_map$findObject","findObject","player","collider","once","world","createDebugGraphic","setAlpha","setDepth","renderDebug","tileColor","collidingTileColor","Display","Color","faceColor","overlap","isPlayerDead","cam","shake","fade","freeze","restart","createWorld","createHelpText","createPlayer","camera","startFollow","setBounds","widthInPixels","heightInPixels","marker","createInput","update","handleSpikeCollision","ScoreScene","ScoreScene_classCallCheck","ScoreScene_getPrototypeOf","ScoreScene_assertThisInitialized","score","scoreText","fontSize","setText","concat","playScene","createScore","events","updateScore","resetScore","Game","type","AUTO","parent","default","arcade","gravity","debug","pixelArt"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mBClFAhC,EAAAD,QAAAkC,gECAaC,EAEJ,gBAFIA,EAGH,iBAHGA,EAIF,kBAJEA,EAKF,kBALEA,EAOJ,eAGIC,EAAQ,CACnBC,KAAM,OACNC,KAAM,OACNC,MAAO,SAGIC,EAAQ,CACnBC,MAAO,6BAGIC,EAAS,CACpBC,OAAQ,4CAMGC,EAAQ,GAGRC,EAAU,CACrBC,WAAY,6CAGDC,EAAU,CACrBC,WAAY,kBACZC,kBAAmB,qXCjCAC,aAwBnB,SAAAA,EAAYC,EAAOC,EAAGC,gGAAGC,CAAAC,KAAAL,GAAAM,EAAAD,KAAA,gBAAAC,EAAAD,KAAA,iBAAAC,EAAAD,KAAA,eACvBA,KAAKJ,MAAQA,EAEbI,KAAKE,OAASN,EAAMO,QAAQC,IACzBF,OAAOL,EAAGC,EAAGX,EAAOC,OAAQ,GAC5BiB,QAAQ,IAAM,GACdC,eAAe,IAAK,KACpBC,QAAQ,GAAI,IACZC,UAAU,EAAG,GARO,IAAAC,EAYnB9B,IAAO+B,MAAMC,SAASC,SADxBC,EAXqBJ,EAWrBI,KAAMC,EAXeL,EAWfK,MAAOC,EAXQN,EAWRM,GAAIC,EAXIP,EAWJO,EAAGC,EAXCR,EAWDQ,EAAGC,EAXFT,EAWES,EAEzBlB,KAAKmB,KAAOvB,EAAMwB,MAAMC,SAASC,QAAQ,CACvCC,KAAMV,EACNW,MAAOV,EACPW,GAAIV,EACJW,EAAGV,EACHW,EAAGV,EACHhE,EAAGiE,4DApCiBtB,GAAO,IACrBgC,EAAUhC,EAAVgC,MAERA,EAAM3D,OAAO,CACXC,IAAK,cACL2D,OAAQD,EAAME,qBAAqB3C,EAAOC,OAAQ,CAAE2C,MAAO,EAAGC,IAAK,IACnEC,UAAW,EACXC,QAAS,IAEXN,EAAM3D,OAAO,CACXC,IAAK,aACL2D,OAAQD,EAAME,qBAAqB3C,EAAOC,OAAQ,CAAE2C,MAAO,EAAGC,IAAK,KACnEC,UAAW,GACXC,QAAS,4CA4BXlC,KAAKE,OAAOiC,KAAKC,OAAQ,oCAIzBpC,KAAKE,OAAOmC,2CAGL,IACCC,EAAa3D,IAAO+B,MAAMC,SAA1B2B,SACAnB,EAAiBnB,KAAjBmB,KAAMjB,EAAWF,KAAXE,OACRqC,EAAWrC,EAAOiC,KAAKK,QAAQC,KAC/BC,EAAeH,EAAW,IAAM,IAElCpB,EAAKI,KAAKoB,QAAUxB,EAAKQ,EAAEgB,QAC7BzC,EAAO0C,kBAAkBF,GACzBxC,EAAO2C,UAAS,IACP1B,EAAKK,MAAMmB,QAAUxB,EAAKlE,EAAE0F,QACrCzC,EAAO0C,iBAAiBF,GACxBxC,EAAO2C,UAAS,IAEhB3C,EAAO0C,iBAAiB,GAGtBL,IAAaD,EAASnB,EAAKM,KAAOa,EAASnB,EAAKO,KAClDxB,EAAO4C,cAAc,KAGnBP,EAC6B,IAA3BrC,EAAOiC,KAAKY,SAASlD,EAASK,EAAO0B,MAAMoB,KAAK,cAAc,GAC7D9C,EAAO0B,MAAMoB,KAAK,eAAe,IAEtC9C,EAAO0B,MAAMqB,OACb/C,EAAOgD,WAAW/D,EAAOC,OAAQ,2sCCvElB+D,cACnB,SAAAA,IAAc,mGAAAC,CAAApD,KAAAmD,GAAAE,EAAArD,KAAAsD,EAAAH,GAAArG,KAAAkD,KACN,CAAE9B,IAAKW,EAAMC,8PAFgBH,IAAO4E,kDAK/B,IAAAC,EAAAxD,KACXA,KAAKyD,KAAKC,QAAQ9E,GAElBvB,OAAOsG,OAAO1E,GAAO2E,QAAQ,SAACC,GAC5BL,EAAKC,KAAKI,MAAMA,EAAOA,4CAIZ,IAAAC,EAAA9D,KACbA,KAAKyD,KAAKC,QAAQ9E,GAElBvB,OAAOsG,OAAOrE,GAASsE,QAAQ,SAACG,GAC9BD,EAAKL,KAAKI,MAAME,EAAMA,4CAIX,IAAAC,EAAAhE,KACbA,KAAKyD,KAAKC,QAAQ9E,GAElBvB,OAAOsG,OAAOnE,GAASoE,QAAQ,SAACK,GAC9BD,EAAKP,KAAKS,iBAAiBD,EAAKA,6CAIpB9C,EAAMgD,GAAa,IAAAC,EAAApE,KACjCA,KAAKyD,KAAKC,QAAQ9E,GAElBuC,EAAKyC,QAAQ,SAAC1D,GACZkE,EAAKX,KAAKY,YAAYnE,EAAQA,EAAQiE,yCAI9B,IAAAG,EAAAtE,KACVA,KAAKyD,KAAKC,QAAQ9E,GAElBvB,OAAOsG,OAAOtE,GAAOuE,QAAQ,SAAAW,GAAoB,IAAAC,EAAAC,EAAAF,EAAA,GAAlBG,EAAkBF,EAAA,GAAZG,EAAYH,EAAA,GAC/CF,EAAKb,KAAKmB,MAAMF,EAAMA,EAAMC,8CAK9B,IAAME,EAAa7E,KAAKI,IAAI0E,SAAS,CACnCC,UAAW,CACTC,MAAO,YAILC,EAAkBjF,KAAKkF,KAAKC,SAASC,MAAQ,EAC7CC,EAAmBrF,KAAKkF,KAAKC,SAASG,OAAS,EAC/CC,EAA0C,GAA3BvF,KAAKkF,KAAKC,SAASC,MACxCpF,KAAKyD,KAAK+B,GAAG,WAAY,SAACC,GACxB,IAAMC,EAAWH,EAAeE,EAEhCZ,EAAWc,SAASV,EAAkBS,EAAW,EAAGL,EAAmB,GAAIK,EAAU,wCAKvF1F,KAAK4F,aACL5F,KAAK6F,eACL7F,KAAK8F,eACL9F,KAAK+F,gBAAgB,CAAC5G,EAAOC,QAAS,CACpC4G,WAAY,GACZC,YAAa,GACbC,OAAQ,EACRC,QAAS,IAGXnG,KAAKoG,kDAILzG,EAAO0G,iBAAiBrG,MAExBA,KAAKJ,MAAMmC,MAAMlD,EAAME,6UC3FNuH,aAOnB,SAAAA,EAAY1G,EAAOqE,gGAAKsC,CAAAvG,KAAAsG,GAAAE,EAAAxG,KAAA,cAAAwG,EAAAxG,KAAA,gBAAAwG,EAAAxG,KAAA,mBACtBA,KAAKiE,IAAMA,EACXjE,KAAKJ,MAAQA,EACbI,KAAK8E,SAAWlF,EAAMQ,IAAI0E,WAHJ,IAIdA,EAAa9E,KAAb8E,SACRA,EAAS2B,UAAU,EAAG,SAAU,GAChC3B,EAAS4B,WAAW,EAAG,EAAGzC,EAAI0C,UAAW1C,EAAI2C,YAC7C9B,EAAS2B,UAAU,EAAG,SAAU,GAChC3B,EAAS4B,WAAW,EAAG,EAAGzC,EAAI0C,UAAW1C,EAAI2C,yEAGjC,IAAAC,EAC4B7G,KAAKJ,MAArCkH,EADID,EACJC,QAASC,EADLF,EACKE,YAEXC,EAHMH,EACkBzF,MAER6F,cAChBC,EAAaF,EAAQG,iBAAiBL,EAAQM,MAChDJ,EAAQrE,QACGoE,EAAYM,iBAAiB,EAAGH,EAAWrH,EAAGqH,EAAWpH,GACjEwH,cAAa,oCAKpB,IACMJ,EADUlH,KAAKJ,MAAMwB,MAAM6F,cACNE,iBAAiBnH,KAAKJ,MAAMkH,QAAQM,MACzDG,EAAgBvH,KAAKiE,IAAIuD,cAAcN,EAAWrH,EAAGqH,EAAWpH,GAChE2H,EAAoBzH,KAAKiE,IAAIyD,cAAcH,EAAc1H,EAAG0H,EAAczH,GAChFE,KAAK8E,SAAS6C,YAAYF,EAAkB5H,EAAG4H,EAAkB3H,GAEjEE,KAAK4H,gDAIL5H,KAAK8E,SAASzC,84BC9BGwF,cACnB,SAAAA,IAAc,IAAArE,MAAA,mGAAAsE,CAAA9H,KAAA6H,KACZ7H,KAAAwD,MAAAuE,EAAAF,GAAA/K,KAAAkD,KAAM,CAAE9B,IAAKW,EAAME,sDADPiJ,EAAAC,IAAAzE,IAAA,iBAAAwE,EAAAC,IAAAzE,IAAA,iBAAAwE,EAAAC,IAAAzE,IAAA,cAAAwE,EAAAC,IAAAzE,IAAA,gBAUC,GAVDwE,EAAAC,IAAAzE,IAAA,qBAAAwE,EAAAC,IAAAzE,IAAA,sBAAAA,wPADuB7E,IAAO4E,mDAiB9B,IAAAO,EAAA9D,KACZA,KAAKiE,IAAMjE,KAAKkI,KAAKC,QAAQ,CAAEjK,IAAKsB,EAAQC,aADhC,IAEJwE,EAAQjE,KAARiE,IACFmE,EAAUnE,EAAIoE,gBAAgB/I,EAAQC,WAAYD,EAAQC,YAChE0E,EAAIqE,mBAAmB,aAAcF,GACrCpI,KAAK+G,YAAc9C,EAAIqE,mBAAmB,SAAUF,GALxC,IAMJrB,EAAgB/G,KAAhB+G,YACR9C,EAAIqE,mBAAmB,aAAcF,GAErCrB,EAAYwB,uBAAuB,CAAEC,UAAU,IAE/CxI,KAAKyI,WAAazI,KAAKG,QAAQC,IAAIsI,cACnC3B,EAAY4B,YAAY,SAAC5E,GACvB,GAAmB,KAAfA,EAAK6E,MAAc,CACrB,IAAMC,EAAQ/E,EAAK2E,WAAWxK,OAAO8F,EAAK+E,aAAc/E,EAAKgF,aAAc9J,EAAMC,OAEjF2J,EAAMG,SAAWjF,EAAKiF,SACF,IAAhBH,EAAMI,MAAaJ,EAAM1G,KAAK5B,QAAQ,GAAI,GAAGC,UAAU,EAAG,KACpC,KAAjBqI,EAAMI,MAAeJ,EAAM1G,KAAK5B,QAAQ,EAAG,IAAIC,UAAU,GAAI,GAC7C,KAAhBqI,EAAMI,OAAcJ,EAAM1G,KAAK5B,QAAQ,EAAG,IAAIC,UAAU,EAAG,GAEpEuG,EAAYmC,aAAanF,EAAKlE,EAAGkE,EAAKjE,+CAM1CE,KAAKI,IAAI+I,KAAK,GAAI,GAAI,0DAA2D,CAC/EC,KAAM,iBACNC,KAAM,UACNC,QAAS,CAAEzJ,EAAG,GAAIC,EAAG,IACrByJ,gBAAiB,YAChBC,gBAAgB,0CAGN,IACLvF,EAA8BjE,KAA9BiE,IAAK9D,EAAyBH,KAAzBG,QAAS4G,EAAgB/G,KAAhB+G,YADT0C,EAEIxF,EAAIyF,WAAW,UAAW,SAAAnF,GAAA,MAAuB,gBAAvBA,EAAGrH,OAAtC2C,EAFK4J,EAEL5J,EAAGC,EAFE2J,EAEF3J,EAEXE,KAAK2J,OAAS,IAAIhK,EAAOK,KAAMH,EAAGC,GAElCK,EAAQC,IAAIwJ,SAAS5J,KAAK2J,OAAOzJ,OAAQ6G,yCAG7B,IAAA/C,EAAAhE,KACJ+G,EAAuB/G,KAAvB+G,YAAuB/G,KAAVoB,MAGfC,SAASwI,KAAK,aAAc,WAChC7F,EAAK7D,QAAQ2J,MAAMC,qBAGnB,IAAMjF,EAAWd,EAAK5D,IACnB0E,WACAkF,SAAS,KACTC,SAAS,IAEZlD,EAAYmD,YAAYpF,EAAU,CAChCqF,UAAW,KACXC,mBAAoB,IAAIzL,IAAO0L,QAAQC,MAAM,IAAK,IAAK,GAAI,KAC3DC,UAAW,IAAI5L,IAAO0L,QAAQC,MAAM,GAAI,GAAI,GAAI,wDAK/B,IAEnB1K,EACEI,KADFJ,MAAO+J,EACL3J,KADK2J,OAAQxJ,EACbH,KADaG,QAAS4G,EACtB/G,KADsB+G,YAAa0B,EACnCzI,KADmCyI,WAAY3B,EAC/C9G,KAD+C8G,QAGnD,GACE6C,EAAOzJ,OAAOJ,EAAIiH,EAAYzB,QAC3BnF,EAAQ2J,MAAMU,QAAQb,EAAOzJ,OAAQuI,GACxC,CACAzI,KAAKyK,cAAe,EAEpB,IAAMC,EAAM5D,EAAQM,KACpBsD,EAAIC,MAAM,IAAK,KACfD,EAAIE,KAAK,IAAK,EAAG,EAAG,GAEpBjB,EAAOkB,SAEPH,EAAIb,KAAK,wBAAyB,WAChCF,EAAOtH,UACPzC,EAAMkL,8CAMV9K,KAAKyK,cAAe,EAEpBzK,KAAK+K,cACL/K,KAAKgL,iBACLhL,KAAKiL,eALE,IAMCtB,EAAyB3J,KAAzB2J,OAAQ1F,EAAiBjE,KAAjBiE,IACViH,EAD2BlL,KAAZ8G,QACEM,KACvB8D,EAAOC,YAAYxB,EAAOzJ,QAC1BgL,EAAOE,UAAU,EAAG,EAAGnH,EAAIoH,cAAepH,EAAIqH,gBAC9CtL,KAAKuL,OAAS,IAAIjF,EAAgBtG,KAAMiE,GACxCjE,KAAKwL,+CAGE,IACC7B,EAAiC3J,KAAjC2J,OAAQc,EAAyBzK,KAAzByK,aAAcc,EAAWvL,KAAXuL,OAC1Bd,IAEJd,EAAO8B,SACPF,EAAOE,SAEPzL,KAAK0L,oyBCpIYC,cACnB,SAAAA,IAAc,IAAAnI,YAAA,mGAAAoI,CAAA5L,KAAA2L,KACZ3L,KAAAwD,MAAAqI,EAAAF,GAAA7O,KAAAkD,KAAM,CAAE9B,IAAKW,EAAMG,yDADP8M,IAAAtI,MAIN,KAJM,mGAAAA,wPADwB7E,IAAO4E,mDAQ3CvD,KAAK+L,MAAQ,EACb/L,KAAKgM,UAAYhM,KAAKI,IAAI+I,KAAK,GAAI,GAAI,WAAY,CAAE8C,SAAU,OAAQ5C,KAAM,+CAI7ErJ,KAAK+L,OAAS,GACd/L,KAAKgM,UAAUE,QAAf,UAAAC,OAAiCnM,KAAK+L,6CAItC/L,KAAK+L,MAAQ,EACb/L,KAAKgM,UAAUE,QAAf,UAAAC,OAAiCnM,KAAK+L,yCAItC,IAAMK,EAAYpM,KAAKJ,MAAMpC,IAAIqB,EAAME,MAEvCiB,KAAKqM,cAELD,EAAUE,OAAO9G,GAAG,cAAexF,KAAKuM,YAAavM,MACrDoM,EAAUE,OAAO9G,GAAG,cAAexF,KAAKwM,WAAYxM,2CC9BxD,IAAIrB,IAAO8N,KAAK,CACdC,KAAM/N,IAAOgO,KACbvH,MAAO,IACPE,OAAQ,IACRsH,OAAQ,iBACRzM,QAAS,CACP0M,QAAS,SACTC,OAAQ,CACNC,QAAS,CAAEjN,EAAG,KACdkN,OAAO,EACPC,UAAU,IAGdrN,MAAO,CAACuD,EAAW0E,EAAW8D","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = Phaser;","export const PATH = {\n  BASE: 'assets',\n  IMAGE: 'assets/images',\n  SPRITE: 'assets/sprites',\n  TILEMAP: 'assets/tilemaps',\n  TILESET: 'assets/tilesets',\n  AUDIO: 'assets/audio',\n  ATLAS: 'assets/atlas',\n};\n\nexport const SCENE = {\n  LOAD: 'LOAD',\n  PLAY: 'PLAY',\n  SCORE: 'SCORE',\n};\n\nexport const IMAGE = {\n  SPIKE: '0x72-industrial-spike.png',\n};\n\nexport const SPRITE = {\n  PLAYER: '0x72-industrial-player-32px-extruded.png',\n};\n\nexport const AUDIO = {\n};\n\nexport const ATLAS = {\n};\n\nexport const TILESET = {\n  INDUSTRIAL: '0x72-industrial-tileset-32px-extruded.png',\n};\n\nexport const TILEMAP = {\n  PLATFORMER: 'platformer.json',\n  PLATFORMER_SIMPLE: 'platformer-simple.json',\n};\n","import Phaser from 'phaser';\nimport { SPRITE } from 'common/constants';\n\nexport default class Player {\n  scene\n\n  sprite\n\n  keys\n\n  static CreateAnimations(scene) {\n    const { anims } = scene;\n\n    anims.create({\n      key: 'player-idle',\n      frames: anims.generateFrameNumbers(SPRITE.PLAYER, { start: 0, end: 3 }),\n      frameRate: 3,\n      repeat: -1,\n    });\n    anims.create({\n      key: 'player-run',\n      frames: anims.generateFrameNumbers(SPRITE.PLAYER, { start: 8, end: 15 }),\n      frameRate: 12,\n      repeat: -1,\n    });\n  }\n\n  constructor(scene, x, y) {\n    this.scene = scene;\n\n    this.sprite = scene.physics.add\n      .sprite(x, y, SPRITE.PLAYER, 0)\n      .setDrag(1000, 0)\n      .setMaxVelocity(300, 400)\n      .setSize(18, 24)\n      .setOffset(7, 9);\n\n    const {\n      LEFT, RIGHT, UP, W, A, D,\n    } = Phaser.Input.Keyboard.KeyCodes;\n    this.keys = scene.input.keyboard.addKeys({\n      left: LEFT,\n      right: RIGHT,\n      up: UP,\n      w: W,\n      a: A,\n      d: D,\n    });\n  }\n\n  freeze() {\n    this.sprite.body.moves = false;\n  }\n\n  destroy() {\n    this.sprite.destroy();\n  }\n\n  update() {\n    const { JustDown } = Phaser.Input.Keyboard;\n    const { keys, sprite } = this;\n    const onGround = sprite.body.blocked.down;\n    const acceleration = onGround ? 600 : 200;\n\n    if (keys.left.isDown || keys.a.isDown) {\n      sprite.setAccelerationX(-acceleration);\n      sprite.setFlipX(true);\n    } else if (keys.right.isDown || keys.d.isDown) {\n      sprite.setAccelerationX(acceleration);\n      sprite.setFlipX(false);\n    } else {\n      sprite.setAccelerationX(0);\n    }\n\n    if (onGround && (JustDown(keys.up) || JustDown(keys.w))) {\n      sprite.setVelocityY(-500);\n    }\n\n    if (onGround) {\n      if (sprite.body.velocity.x !== 0) sprite.anims.play('player-run', true);\n      else sprite.anims.play('player-idle', true);\n    } else {\n      sprite.anims.stop();\n      sprite.setTexture(SPRITE.PLAYER, 10);\n    }\n  }\n}\n","import Phaser from 'phaser';\nimport {\n  SCENE,\n  IMAGE,\n  SPRITE,\n  PATH,\n  TILESET,\n  TILEMAP,\n  ATLAS,\n} from 'common/constants';\nimport Player from 'entities/Player';\n\nexport default class LoadScene extends Phaser.Scene {\n  constructor() {\n    super({ key: SCENE.LOAD });\n  }\n\n  loadImages() {\n    this.load.setPath(PATH.IMAGE);\n\n    Object.values(IMAGE).forEach((image) => {\n      this.load.image(image, image);\n    });\n  }\n\n  loadTilesets() {\n    this.load.setPath(PATH.TILESET);\n\n    Object.values(TILESET).forEach((tile) => {\n      this.load.image(tile, tile);\n    });\n  }\n\n  loadTilemaps() {\n    this.load.setPath(PATH.TILEMAP);\n\n    Object.values(TILEMAP).forEach((map) => {\n      this.load.tilemapTiledJSON(map, map);\n    });\n  }\n\n  loadSpritesheet(keys, frameConfig) {\n    this.load.setPath(PATH.SPRITE);\n\n    keys.forEach((sprite) => {\n      this.load.spritesheet(sprite, sprite, frameConfig);\n    });\n  }\n\n  loadAtlas() {\n    this.load.setPath(PATH.ATLAS);\n\n    Object.values(ATLAS).forEach(([path, config]) => {\n      this.load.atlas(path, path, config);\n    });\n  }\n\n  showLoadingBar() {\n    const loadingBar = this.add.graphics({\n      fillStyle: {\n        color: 0xffffff,\n      },\n    });\n\n    const halfScreenWidth = this.game.renderer.width / 2;\n    const halfScreenHeight = this.game.renderer.height / 2;\n    const maxBarLength = this.game.renderer.width * 0.80;\n    this.load.on('progress', (percent) => {\n      const barWidth = maxBarLength * percent;\n\n      loadingBar.fillRect(halfScreenWidth - barWidth / 2, halfScreenHeight - 25, barWidth, 50);\n    });\n  }\n\n  preload() {\n    this.loadImages();\n    this.loadTilesets();\n    this.loadTilemaps();\n    this.loadSpritesheet([SPRITE.PLAYER], {\n      frameWidth: 32,\n      frameHeight: 32,\n      margin: 1,\n      spacing: 2,\n    });\n\n    this.showLoadingBar();\n  }\n\n  create() {\n    Player.CreateAnimations(this);\n\n    this.scene.start(SCENE.PLAY);\n    // this.scene.start(SCENE.SCORE);\n  }\n}\n","export default class MouseTileMarker {\n  map\n\n  scene\n\n  graphics\n\n  constructor(scene, map) {\n    this.map = map;\n    this.scene = scene;\n    this.graphics = scene.add.graphics();\n    const { graphics } = this;\n    graphics.lineStyle(5, 0xffffff, 1);\n    graphics.strokeRect(0, 0, map.tileWidth, map.tileHeight);\n    graphics.lineStyle(3, 0xff4f78, 1);\n    graphics.strokeRect(0, 0, map.tileWidth, map.tileHeight);\n  }\n\n  handleInput() {\n    const { cameras, groundLayer, input } = this.scene;\n\n    const pointer = input.activePointer;\n    const worldPoint = pointer.positionToCamera(cameras.main);\n    if (pointer.isDown) {\n      const tile = groundLayer.putTileAtWorldXY(6, worldPoint.x, worldPoint.y);\n      tile.setCollision(true);\n    }\n  }\n\n  update() {\n    const pointer = this.scene.input.activePointer;\n    const worldPoint = pointer.positionToCamera(this.scene.cameras.main);\n    const pointerTileXY = this.map.worldToTileXY(worldPoint.x, worldPoint.y);\n    const snappedWorldPoint = this.map.tileToWorldXY(pointerTileXY.x, pointerTileXY.y);\n    this.graphics.setPosition(snappedWorldPoint.x, snappedWorldPoint.y);\n\n    this.handleInput();\n  }\n\n  destroy() {\n    this.graphics.destroy();\n  }\n}\n","import Phaser from 'phaser';\nimport {\n  SCENE,\n  TILEMAP,\n  IMAGE,\n  TILESET,\n} from 'common/constants';\nimport Player from 'entities/Player';\nimport MouseTileMarker from 'entities/TileMarker';\n\nexport default class PlayScene extends Phaser.Scene {\n  constructor() {\n    super({ key: SCENE.PLAY });\n  }\n\n  marker\n\n  player\n\n  map\n\n  isPlayerDead = false\n\n  spikeGroup\n\n  groundLayer\n\n  createWorld() {\n    this.map = this.make.tilemap({ key: TILEMAP.PLATFORMER });\n    const { map } = this;\n    const tileset = map.addTilesetImage(TILESET.INDUSTRIAL, TILESET.INDUSTRIAL);\n    map.createDynamicLayer('Background', tileset);\n    this.groundLayer = map.createDynamicLayer('Ground', tileset);\n    const { groundLayer } = this;\n    map.createDynamicLayer('Foreground', tileset);\n\n    groundLayer.setCollisionByProperty({ collides: true });\n\n    this.spikeGroup = this.physics.add.staticGroup();\n    groundLayer.forEachTile((tile) => {\n      if (tile.index === 77) {\n        const spike = this.spikeGroup.create(tile.getCenterX(), tile.getCenterY(), IMAGE.SPIKE);\n\n        spike.rotation = tile.rotation;\n        if (spike.angle === 0) spike.body.setSize(32, 6).setOffset(0, 26);\n        else if (spike.angle === -90) spike.body.setSize(6, 32).setOffset(26, 0);\n        else if (spike.angle === 90) spike.body.setSize(6, 32).setOffset(0, 0);\n\n        groundLayer.removeTileAt(tile.x, tile.y);\n      }\n    });\n  }\n\n  createHelpText() {\n    this.add.text(16, 16, 'Arrow/WASD to move & jump\\nLeft click to draw platforms', {\n      font: '18px monospace',\n      fill: '#000000',\n      padding: { x: 20, y: 10 },\n      backgroundColor: '#ffffff',\n    }).setScrollFactor(0);\n  }\n\n  createPlayer() {\n    const { map, physics, groundLayer } = this;\n    const { x, y } = map.findObject('Objects', ({ name }) => name === 'Spawn Point');\n\n    this.player = new Player(this, x, y);\n\n    physics.add.collider(this.player.sprite, groundLayer);\n  }\n\n  createInput() {\n    const { groundLayer, input } = this;\n\n    // Debug graphics\n    input.keyboard.once('keydown_F1', () => {\n      this.physics.world.createDebugGraphic();\n\n      // Create worldLayer collision graphic above the player, but below the help text\n      const graphics = this.add\n        .graphics()\n        .setAlpha(0.75)\n        .setDepth(20);\n\n      groundLayer.renderDebug(graphics, {\n        tileColor: null, // Color of non-colliding tiles\n        collidingTileColor: new Phaser.Display.Color(243, 134, 48, 255), // Color of colliding tiles\n        faceColor: new Phaser.Display.Color(40, 39, 37, 255), // Color of colliding face edges\n      });\n    });\n  }\n\n  handleSpikeCollision() {\n    const {\n      scene, player, physics, groundLayer, spikeGroup, cameras,\n    } = this;\n\n    if (\n      player.sprite.y > groundLayer.height\n      || physics.world.overlap(player.sprite, spikeGroup)\n    ) {\n      this.isPlayerDead = true;\n\n      const cam = cameras.main;\n      cam.shake(100, 0.05);\n      cam.fade(550, 0, 0, 0);\n\n      player.freeze();\n\n      cam.once('camerafadeoutcomplete', () => {\n        player.destroy();\n        scene.restart();\n      });\n    }\n  }\n\n  create() {\n    this.isPlayerDead = false;\n\n    this.createWorld();\n    this.createHelpText();\n    this.createPlayer();\n    const { player, map, cameras } = this;\n    const camera = cameras.main;\n    camera.startFollow(player.sprite);\n    camera.setBounds(0, 0, map.widthInPixels, map.heightInPixels);\n    this.marker = new MouseTileMarker(this, map);\n    this.createInput();\n  }\n\n  update() {\n    const { player, isPlayerDead, marker } = this;\n    if (isPlayerDead) return;\n\n    player.update();\n    marker.update();\n\n    this.handleSpikeCollision();\n  }\n}\n","import Phaser from 'phaser';\nimport {\n  SCENE,\n} from 'common/constants';\n\nexport default class ScoreScene extends Phaser.Scene {\n  constructor() {\n    super({ key: SCENE.SCORE });\n  }\n\n  score = 0\n\n  createScore() {\n    this.score = 0;\n    this.scoreText = this.add.text(16, 16, 'score: 0', { fontSize: '32px', fill: '#000' });\n  }\n\n  updateScore() {\n    this.score += 10;\n    this.scoreText.setText(`Score: ${this.score}`);\n  }\n\n  resetScore() {\n    this.score = 0;\n    this.scoreText.setText(`Score: ${this.score}`);\n  }\n\n  create() {\n    const playScene = this.scene.get(SCENE.PLAY);\n\n    this.createScore();\n\n    playScene.events.on('collectStar', this.updateScore, this);\n    playScene.events.on('restartGame', this.resetScore, this);\n  }\n}\n","import Phaser from 'phaser';\nimport { LoadScene, PlayScene, ScoreScene } from 'scenes';\n\nnew Phaser.Game({ // eslint-disable-line no-new\n  type: Phaser.AUTO,\n  width: 800,\n  height: 600,\n  parent: 'game-container',\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: { y: 1000 },\n      debug: false,\n      pixelArt: true,\n    },\n  },\n  scene: [LoadScene, PlayScene, ScoreScene],\n});\n"],"sourceRoot":""}